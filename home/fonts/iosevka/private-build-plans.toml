[buildPlans.iosevka-custom]
family = "Iosevka Custom"
spacing = "term"
serifs = "sans"

  [buildPlans.iosevka-custom.variants]
  inherits = "ss20"

    [buildPlans.iosevka-custom.variants.design]
    b = "toothless-corner"
    l = "tailed-serifed"
    p = "earless-corner"
    nine = "closed-contour"
    asterisk = "penta-low"
    number-sign = "upright-open"
    ampersand = "upper-open"
    lig-ltgteq = "slanted"

    [buildPlans.iosevka-custom.variants.italic]
    capital-b = "standard-interrupted-serifless"
    capital-g = "toothless-corner-serifless-hooked"
    capital-n = "asymmetric"
    capital-p = "open"
    capital-r = "standing-open"
    g = "double-storey-open"
    h = "tailed"
    q = "tailed"
    ampersand = "lower-open"
    dollar = "open"
    cent = "open"

    [buildPlans.iosevka-custom.variants.oblique]
    capital-z = "curly-serifless-with-crossbar"
    eszet = "traditional"
    three = "flattop"
    ampersand = "flat-top"
    question = "corner"

  [buildPlans.iosevka-custom.ligations]
  inherits = "dlig"
  enables  = ["eqeqeq", "exeqeq-dotted", "exeq-dotted"]

###################################################################################################
# Override default building weights
# When buildPlans.<plan name>.weights is absent, all weights would built and mapped to
# default values.
# IMPORTANT : Currently "menu" and "css" property only support numbers between 0 and 1000.
#             and "shape" properly only supports number between 100 and 900 (inclusive).
#             If you decide to use custom weights you have to define all the weights you
#             plan to use otherwise they will not be built.

# [buildPlans.iosevka-custom.weights.regular]
# shape = 400  # Weight for glyph shapes.
# menu  = 400  # Weight for the font's names.
# css   = 400  # Weight for webfont CSS.

# [buildPlans.iosevka-custom.weights.book]
# shape = 450
# menu  = 450  # Use 450 here to name the font's weight "Book"
# css   = 450

# [buildPlans.iosevka-custom.weights.bold]
# shape = 700
# menu  = 700
# css   = 700

# End weight section
###################################################################################################

###################################################################################################
# Override default building slope sets
# Format: <upright|italic|oblique> = <"normal"|"italic"|"oblique">
# When this section is absent, all slopes would be built.

# [buildPlans.iosevka-custom.slopes]
# upright = "normal"
# italic = "italic"
# oblique = "oblique"

# End slope section
###################################################################################################

###################################################################################################
# Override default building widths
# When buildPlans.<plan name>.widths is absent, all widths would built and mapped to
# default values.
# IMPORTANT : Currently "shape" property only supports numbers between 434 and 664 (inclusive),
#             while "menu" only supports integers between 1 and 9 (inclusive).
#             The "shape" parameter specifies the unit width, measured in 1/1000 em. The glyphs'
#             width are equal to, or a simple multiple of the unit width.
#             If you decide to use custom widths you have to define all the widths you plan to use,
#             otherwise they will not be built.

[buildPlans.iosevka-custom.widths.normal]
shape = 500        # Unit Width, measured in 1/1000 em.
menu  = 5          # Width grade for the font's names.
css   = "normal"   # "font-stretch' property of webfont CSS.

# [buildPlans.iosevka-custom.widths.extended]
# shape = 576
# menu  = 7
# css   = "expanded"

# End width section
###################################################################################################

###################################################################################################
# Character Exclusion
# Specify character ranges in the section below to exclude certain characters from the font being
# built. Remove this section when this feature is not needed.

# [buildPlans.iosevka-custom.exclude-chars]
# ranges = [[10003, 10008]]

# End character exclusion
###################################################################################################

###################################################################################################
# Compatibility Ligatures
# Certain applications like Emacs does not support proper programming liagtures provided by
# OpenType, but can support ligatures provided by PUA codepoints. Therefore you can edit the
# following section to build PUA characters that are generated from the OpenType ligatures.
# Remove this section when compatibility ligatures are not needed.

# [[buildPlans.iosevka-custom.compatibility-ligatures]]
# unicode = 57600 # 0xE100
# featureTag = 'calt'
# sequence = '<*>'

# End compatibility ligatures section
###################################################################################################

###################################################################################################
# Metric overrides
# Certain metrics like line height (leading) could be overridden in your build plan file.
# Edit the values to change the metrics. Remove this section when overriding is not needed.

# [buildPlans.iosevka-custom.metric-override]
# leading = 1250
# winMetricAscenderPad = 0
# winMetricDescenderPad = 0
# powerlineScaleY = 1
# powerlineScaleX = 1
# powerlineShiftY = 0
# powerlineShiftX = 0

# End metric override section
###################################################################################################


[buildPlans.iosevka-slab-custom]
family = "Iosevka Slab Custom"
spacing = "quasi-proportional"
serifs = "slab"
no-cv-ss = true

[buildPlans.iosevka-slab-custom.variants.design]
capital-a = "curly-top-serifed"
capital-b = "standard-unilateral-serifed"
capital-c = "unilateral-inward-serifed"
capital-d = "standard-unilateral-serifed"
capital-e = "motion-serifed"
capital-f = "motion-serifed"
capital-g = "toothless-corner-serifless-hooked"
capital-h = "motion-serifed"
capital-k = "curly-motion-serifed"
capital-l = "motion-serifed"
capital-m = "hanging-motion-serifed"
capital-n = "asymmetric-motion-serifed"
capital-p = "closed-motion-serifed"
capital-q = "vertical-crossing"
capital-r = "curly-motion-serifed"
capital-s = "bilateral-inward-serifed"
capital-t = "motion-serifed"
capital-u = "toothless-corner-unilateral-motion-serifed"
capital-v = "curly-motion-serifed"
capital-w = "curly-motion-serifed"
capital-x = "curly-motion-serifed"
capital-y = "curly-motion-serifed"
capital-z = "curly-bottom-serifed-with-horizontal-crossbar"
a = "double-storey-toothless-corner"
b = "toothless-corner"
c = "unilateral-inward-serifed"
d = "toothless-corner-serifless"
g = "single-storey-motion-serifed"
h = "straight-motion-serifed"
i = "serifed-asymmetric"
k = "curly-motion-serifed"
l = "tailed-serifed"
m = "motion-serifed"
n = "straight-motion-serifed"
p = "motion-serifed"
q = "straight-motion-serifed"
r = "corner-hooked-base-serifed"
s = "unilateral-inward-serifed"
u = "toothless-corner-motion-serifed"
v = "curly-motion-serifed"
w = "curly-motion-serifed"
x = "curly-motion-serifed"
y = "curly-motion-serifed"
z = "curly-bottom-serifed-with-crossbar"
eszet = "traditional-flat-hook"
turn-v = "curly"
capital-gamma = "motion-serifed"
latn-epsilon = "inward-serifed"
latn-reverse-epsilon = "inward-serifed"
lower-iota = "zshaped"
lower-lambda = "curly"
cyrl-ka = "symmetric-touching-motion-serifed"
cyrl-capital-u = "curly"
one = "base"
three = "flattop"
six = "open-contour"
seven = "straight-serifed"
eight = "crossing-asymmetric"
nine = "closed-contour"
tilde = "low"
asterisk = "turn-hex-high"
number-sign = "upright-open"
ampersand = "flat-top"
dollar = "interrupted"
cent = "bar-interrupted"
ascii-single-quote = "raised-comma"
ascii-grave = "raised-inverse-comma"

  [buildPlans.iosevka-slab-custom.ligations]
  inherits = "dlig"

  [buildPlans.iosevka-slab-custom.slopes]
  upright = "normal"
  oblique = "oblique"
